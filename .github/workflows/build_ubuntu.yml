# This is a basic workflow to help you get started with Actions

name: build_ubuntu

# Triggered on push/pr against master.
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    # @todo -alternatively run on a docker container which already has dependencies installed.
    runs-on:  ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
        cuda: [10.1.105]

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Investigate apt caching? https://stackoverflow.com/questions/59269850/caching-apt-packages-in-github-actions-workflow
    - name: install apt dependencies
      run: |
        CUDA_MAJOR=$(echo "${{matrix.cuda }}" | cut -d. -f1)
        CUDA_MINOR=$(echo "${{matrix.cuda }}" | cut -d. -f2)
        CUDA_PATCH=$(echo "${{matrix.cuda }}" | cut -d. -f3)
        CUDA_LONG=$CUDA_MAJOR.$CUDA_MINOR.$CUDA_PATCH"-1"      
        CUDA_SHORT=$CUDA_MAJOR.$CUDA_MINOR
        UBUNTU_NUM={{ matrix.os }}      
        echo "OS: ${{ matrix.os }}"
        echo "CUDA: ${{ matrix.cuda }}"
        echo "CUDA_MAJOR: $CUDA_MAJOR"
        echo "CUDA_MINOR: $CUDA_MINOR"
        echo "CUDA_PATCH: $CUDA_PATCH"

    - name: configure
      run: |
        mkdir -p build
        cd build
        cmake ..
    - name: compile
      run: |
        cd build
        make
    - name: execute
      run: |
        cd build
        ./main


